{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/home/aman/Assignments/DASS/Job Portal/2019101097/frontend/src/components/ViewJobs/ViewJobs.js\";\nimport React from \"react\";\nimport axios from \"axios\";\nimport { TextField, MenuItem, Slider } from \"@material-ui/core\"; // const ViewJobs = () => {\n//   let jobs;\n//   axios.get(\"http://localhost:8080/jobs\").then((response) => {\n//     console.log(\"requested\");\n//     // displayJobs(response.data);\n//     jobs = response.data;\n//   });\n//   const printJobs = () => {\n//     return <h1>Jobs List</h1>;\n//   };\n//   return (\n//     <div>\n//       <h1>View Jobs</h1>\n//       {printJobs()}\n//     </div>\n//   );\n// };\n\nclass ViewJobs extends React.Component {\n  constructor(props) {\n    super(props);\n    this.maxSalary = 0;\n    this.state = {\n      jobs: [],\n      sortChoice: \"salary\",\n      order: 1,\n      search: \"\",\n      filterType: \"None\",\n      filterSalary: [0, 0],\n      filterDuration: 7\n    };\n    this.handleChange = this.handleChange.bind(this);\n    this.handleSlider = this.handleSlider.bind(this);\n  }\n\n  componentDidMount() {\n    axios.get(\"http://localhost:8080/jobs\").then(response => {\n      for (var i = 0; i < response.data.jobs.length; i++) {\n        this.maxSalary = Math.max(this.maxSalary, response.data.jobs[i].salary);\n      }\n\n      this.setState({\n        jobs: response.data.jobs,\n        filterSalary: [0, this.maxSalary]\n      });\n    });\n  }\n\n  valuetext(value) {\n    return `${value}`;\n  }\n\n  displayFilters() {\n    let durationFilters = [];\n    let jobTypeFilters = [\"None\", \"Full Time\", \"Part Time\", \"Work from Home\"];\n    let typeFilters = [];\n\n    for (var i = 1; i < 8; i++) {\n      durationFilters.push( /*#__PURE__*/_jsxDEV(MenuItem, {\n        value: i,\n        children: i\n      }, i, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 9\n      }, this));\n    }\n\n    for (i = 0; i < jobTypeFilters.length; i++) {\n      typeFilters.push( /*#__PURE__*/_jsxDEV(MenuItem, {\n        value: jobTypeFilters[i],\n        children: jobTypeFilters[i]\n      }, i, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 9\n      }, this));\n    }\n\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(TextField, {\n        style: {\n          margin: \"20px\"\n        },\n        name: \"filterDuration\",\n        select: true,\n        label: \"Duration\",\n        value: this.state.filterDuration,\n        onChange: this.handleChange,\n        children: durationFilters\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(TextField, {\n        style: {\n          margin: \"20px\"\n        },\n        name: \"filterType\",\n        select: true,\n        label: \"Type\",\n        value: this.state.filterType,\n        onChange: this.handleChange,\n        children: typeFilters\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          width: 300\n        },\n        children: [/*#__PURE__*/_jsxDEV(Slider, {\n          value: this.state.filterSalary,\n          onChange: this.handleSlider,\n          min: 0,\n          max: this.maxSalary,\n          step: this.maxSalary / 10,\n          getAriaLabel: index => \"Slider\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 100,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n          children: [this.state.filterSalary[0], \"-\", this.state.filterSalary[1]]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 108,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 7\n    }, this);\n  }\n\n  displayJobs() {\n    this.state.jobs.sort((a, b) => (a[this.state.sortChoice] - b[this.state.sortChoice]) * parseInt(this.state.order));\n    const [minSal, maxSal] = this.state.filterSalary;\n    return this.state.jobs.filter(job => job.title.includes(this.state.search)).filter(job => job.duration < this.state.filterDuration).filter(job => job.salary <= maxSal && job.salary >= minSal).filter(job => this.state.filterType === \"None\" ? true : job.jobType === this.state.filterType).map(job => {\n      return /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"title: \", job.title, \" salary: \", job.salary, \" rating: \", job.rating, \" \", \"duration: \", job.duration]\n      }, job._id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 134,\n        columnNumber: 11\n      }, this);\n    });\n  }\n\n  handleChange(event) {\n    this.setState({ ...this.state,\n      [event.target.name]: event.target.value\n    });\n  }\n\n  handleSlider(event, newValue) {\n    this.setState({ ...this.state,\n      filterSalary: newValue\n    });\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        margin: 100\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"View Jobs\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 157,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(TextField, {\n        style: {\n          margin: \"20px\"\n        },\n        name: \"sortChoice\",\n        select: true,\n        label: \"Sort By\",\n        value: this.state.sortChoice,\n        onChange: this.handleChange,\n        children: [/*#__PURE__*/_jsxDEV(MenuItem, {\n          value: \"salary\",\n          children: \"Salary\"\n        }, 'salary', false, {\n          fileName: _jsxFileName,\n          lineNumber: 166,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(MenuItem, {\n          value: \"rating\",\n          children: \"Rating\"\n        }, 'rating', false, {\n          fileName: _jsxFileName,\n          lineNumber: 169,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(MenuItem, {\n          value: \"duration\",\n          children: \"Duration\"\n        }, 'duration', false, {\n          fileName: _jsxFileName,\n          lineNumber: 172,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 158,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(TextField, {\n        name: \"order\",\n        select: true,\n        label: \"Order\",\n        value: this.state.order,\n        onChange: this.handleChange,\n        children: [/*#__PURE__*/_jsxDEV(MenuItem, {\n          value: \"1\",\n          children: \"Ascending\"\n        }, 'ascending', false, {\n          fileName: _jsxFileName,\n          lineNumber: 183,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(MenuItem, {\n          value: \"-1\",\n          children: \"Descending\"\n        }, 'descending', false, {\n          fileName: _jsxFileName,\n          lineNumber: 186,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 176,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(TextField, {\n        style: {\n          margin: \"20px\"\n        },\n        name: \"search\",\n        lable: \"Search Jobs\",\n        value: this.state.search,\n        onChange: this.handleChange,\n        autoComplete: \"off\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 190,\n        columnNumber: 9\n      }, this), this.displayFilters(), this.displayJobs()]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 156,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nexport default ViewJobs;","map":{"version":3,"sources":["/home/aman/Assignments/DASS/Job Portal/2019101097/frontend/src/components/ViewJobs/ViewJobs.js"],"names":["React","axios","TextField","MenuItem","Slider","ViewJobs","Component","constructor","props","maxSalary","state","jobs","sortChoice","order","search","filterType","filterSalary","filterDuration","handleChange","bind","handleSlider","componentDidMount","get","then","response","i","data","length","Math","max","salary","setState","valuetext","value","displayFilters","durationFilters","jobTypeFilters","typeFilters","push","margin","width","index","displayJobs","sort","a","b","parseInt","minSal","maxSal","filter","job","title","includes","duration","jobType","map","rating","_id","event","target","name","newValue","render"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport axios from \"axios\";\nimport { TextField, MenuItem, Slider } from \"@material-ui/core\";\n\n// const ViewJobs = () => {\n//   let jobs;\n//   axios.get(\"http://localhost:8080/jobs\").then((response) => {\n//     console.log(\"requested\");\n//     // displayJobs(response.data);\n//     jobs = response.data;\n//   });\n\n//   const printJobs = () => {\n//     return <h1>Jobs List</h1>;\n//   };\n\n//   return (\n//     <div>\n//       <h1>View Jobs</h1>\n//       {printJobs()}\n//     </div>\n//   );\n// };\n\nclass ViewJobs extends React.Component {\n  constructor(props) {\n    super(props);\n    this.maxSalary = 0;\n    this.state = {\n      jobs: [],\n      sortChoice: \"salary\",\n      order: 1,\n      search: \"\",\n      filterType: \"None\",\n      filterSalary: [0, 0],\n      filterDuration: 7,\n    };\n    this.handleChange = this.handleChange.bind(this);\n    this.handleSlider = this.handleSlider.bind(this);\n  }\n\n  componentDidMount() {\n    axios.get(\"http://localhost:8080/jobs\").then((response) => {\n      for (var i = 0; i < response.data.jobs.length; i++) {\n        this.maxSalary = Math.max(this.maxSalary, response.data.jobs[i].salary);\n      }\n      this.setState({\n        jobs: response.data.jobs,\n        filterSalary: [0, this.maxSalary],\n      });\n    });\n  }\n  valuetext(value) {\n    return `${value}`;\n  }\n\n  displayFilters() {\n    let durationFilters = [];\n    let jobTypeFilters = [\"None\", \"Full Time\", \"Part Time\", \"Work from Home\"];\n    let typeFilters = [];\n    for (var i = 1; i < 8; i++) {\n      durationFilters.push(\n        <MenuItem key={i} value={i}>\n          {i}\n        </MenuItem>\n      );\n    }\n\n    for (i = 0; i < jobTypeFilters.length; i++) {\n      typeFilters.push(\n        <MenuItem key={i} value={jobTypeFilters[i]}>\n          {jobTypeFilters[i]}\n        </MenuItem>\n      );\n    }\n\n    return (\n      <div>\n        <TextField\n          style={{ margin: \"20px\" }}\n          name='filterDuration'\n          select\n          label='Duration'\n          value={this.state.filterDuration}\n          onChange={this.handleChange}\n        >\n          {durationFilters}\n        </TextField>\n        <TextField\n          style={{ margin: \"20px\" }}\n          name='filterType'\n          select\n          label='Type'\n          value={this.state.filterType}\n          onChange={this.handleChange}\n        >\n          {typeFilters}\n        </TextField>\n        <div style={{ width: 300 }}>\n          <Slider\n            value={this.state.filterSalary}\n            onChange={this.handleSlider}\n            min={0}\n            max={this.maxSalary}\n            step={this.maxSalary / 10}\n            getAriaLabel={(index) => \"Slider\"}\n          />\n          <h1>\n            {this.state.filterSalary[0]}-{this.state.filterSalary[1]}\n          </h1>\n        </div>\n      </div>\n    );\n  }\n\n  displayJobs() {\n    this.state.jobs.sort(\n      (a, b) =>\n        (a[this.state.sortChoice] - b[this.state.sortChoice]) *\n        parseInt(this.state.order)\n    );\n    const [minSal, maxSal] = this.state.filterSalary;\n    return this.state.jobs\n      .filter((job) => job.title.includes(this.state.search))\n      .filter((job) => job.duration < this.state.filterDuration)\n      .filter((job) => job.salary <= maxSal && job.salary >= minSal)\n      .filter((job) =>\n        this.state.filterType === \"None\"\n          ? true\n          : job.jobType === this.state.filterType\n      )\n      .map((job) => {\n        return (\n          <p key={job._id}>\n            title: {job.title} salary: {job.salary} rating: {job.rating}{\" \"}\n            duration: {job.duration}\n          </p>\n        );\n      });\n  }\n  handleChange(event) {\n    this.setState({\n      ...this.state,\n      [event.target.name]: event.target.value,\n    });\n  }\n  handleSlider(event, newValue) {\n    this.setState({\n      ...this.state,\n      filterSalary: newValue,\n    });\n  }\n\n  render() {\n    return (\n      <div style={{ margin: 100 }}>\n        <h1>View Jobs</h1>\n        <TextField\n          style={{ margin: \"20px\" }}\n          name='sortChoice'\n          select\n          label='Sort By'\n          value={this.state.sortChoice}\n          onChange={this.handleChange}\n        >\n          <MenuItem key='salary' value='salary'>\n            Salary\n          </MenuItem>\n          <MenuItem key='rating' value='rating'>\n            Rating\n          </MenuItem>\n          <MenuItem key='duration' value='duration'>\n            Duration\n          </MenuItem>\n        </TextField>\n        <TextField\n          name='order'\n          select\n          label='Order'\n          value={this.state.order}\n          onChange={this.handleChange}\n        >\n          <MenuItem key='ascending' value='1'>\n            Ascending\n          </MenuItem>\n          <MenuItem key='descending' value='-1'>\n            Descending\n          </MenuItem>\n        </TextField>\n        <TextField\n          style={{ margin: \"20px\" }}\n          name='search'\n          lable='Search Jobs'\n          value={this.state.search}\n          onChange={this.handleChange}\n          autoComplete='off'\n        ></TextField>\n        {this.displayFilters()}\n        {this.displayJobs()}\n      </div>\n    );\n  }\n}\n\nexport default ViewJobs;\n"]},"metadata":{},"sourceType":"module"}