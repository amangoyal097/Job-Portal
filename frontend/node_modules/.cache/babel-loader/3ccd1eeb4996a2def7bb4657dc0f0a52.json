{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/home/aman/Assignments/DASS/Job Portal/2019101097/frontend/src/components/ViewJobs/ViewJobs.js\";\nimport React from \"react\";\nimport axios from \"axios\";\nimport { TextField, MenuItem, Slider, Button, Dialog, DialogTitle, DialogContent, DialogActions } from \"@material-ui/core\"; // const ViewJobs = () => {\n//   let jobs;\n//   axios.get(\"http://localhost:8080/jobs\").then((response) => {\n//     console.log(\"requested\");\n//     // displayJobs(response.data);\n//     jobs = response.data;\n//   });\n//   const printJobs = () => {\n//     return <h1>Jobs List</h1>;\n//   };\n//   return (\n//     <div>\n//       <h1>View Jobs</h1>\n//       {printJobs()}\n//     </div>\n//   );\n// };\n\nclass ViewJobs extends React.Component {\n  constructor(props) {\n    super(props);\n    this.maxSalary = 0;\n    this.applyingToJob = \"\";\n    this._isMounted = false;\n    this.state = {\n      currUser: {},\n      jobs: [],\n      sortChoice: \"salary\",\n      order: 1,\n      search: \"\",\n      filterType: \"None\",\n      filterSalary: [0, 0],\n      filterDuration: 7,\n      openDialog: false\n    };\n    this.handleChange = this.handleChange.bind(this);\n    this.handleSlider = this.handleSlider.bind(this);\n    this.handleClose = this.handleClose.bind(this);\n    this.applyToJob = this.applyToJob.bind(this);\n    this.sendApplication = this.sendApplication.bind(this);\n  }\n\n  handleClose() {\n    this.setState({\n      openDialog: false\n    });\n  }\n\n  sendApplication() {\n    const jobSOP = document.getElementById(\"sop\").value;\n    const jobId = this.applyingToJob;\n    const userId = this.state.currUser._id;\n    let applytoJob = {\n      jobId,\n      userId,\n      jobSOP\n    };\n    axios.defaults.withCredentials = true;\n    axios.post(\"http:///localhost:8080/applyToJob\", applytoJob).then(response => {\n      if (response.data === \"Success\") alert(\"Applied\");else alert(\"Failed to Apply\");\n    });\n    console.log(applytoJob);\n    if (this._isMounted) this.handleClose();\n  }\n\n  componentDidMount() {\n    this._isMounted = true;\n    axios.defaults.withCredentials = true;\n    axios.get(\"http://localhost:8080/currUser\").then(response => {\n      let obj = response.data;\n\n      if (Object.entries(obj).length === 0) {\n        alert(\"Not logged In\");\n        this.props.history.push(\"/login\");\n      } else {\n        if (this._isMounted) this.setState({\n          currUser: obj\n        });\n      }\n    }).catch(err => {\n      alert(\"Not logged In\");\n      this.props.history.push(\"/login\");\n    });\n    if (Object.entries(this.state.currUser).length === 0) axios.get(\"http://localhost:8080/jobs\").then(response => {\n      for (var i = 0; i < response.data.jobs.length; i++) {\n        this.maxSalary = Math.max(this.maxSalary, response.data.jobs[i].salary);\n      }\n\n      if (this._isMounted) this.setState({\n        jobs: response.data.jobs,\n        filterSalary: [0, this.maxSalary]\n      });\n    });\n  }\n\n  componentWillUnmount() {\n    this._isMounted = false;\n  }\n\n  valuetext(value) {\n    return `${value}`;\n  }\n\n  displayFilters() {\n    let durationFilters = [];\n    let jobTypeFilters = [\"None\", \"Full Time\", \"Part Time\", \"Work from Home\"];\n    let typeFilters = [];\n\n    for (var i = 1; i < 8; i++) {\n      durationFilters.push( /*#__PURE__*/_jsxDEV(MenuItem, {\n        value: i,\n        children: i\n      }, i, false, {\n        fileName: _jsxFileName,\n        lineNumber: 135,\n        columnNumber: 9\n      }, this));\n    }\n\n    for (i = 0; i < jobTypeFilters.length; i++) {\n      typeFilters.push( /*#__PURE__*/_jsxDEV(MenuItem, {\n        value: jobTypeFilters[i],\n        children: jobTypeFilters[i]\n      }, i, false, {\n        fileName: _jsxFileName,\n        lineNumber: 143,\n        columnNumber: 9\n      }, this));\n    }\n\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(TextField, {\n        style: {\n          margin: \"20px\"\n        },\n        name: \"filterDuration\",\n        select: true,\n        label: \"Duration\",\n        value: this.state.filterDuration,\n        onChange: this.handleChange,\n        children: durationFilters\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 151,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(TextField, {\n        style: {\n          margin: \"20px\"\n        },\n        name: \"filterType\",\n        select: true,\n        label: \"Type\",\n        value: this.state.filterType,\n        onChange: this.handleChange,\n        children: typeFilters\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 161,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          width: 300\n        },\n        children: [/*#__PURE__*/_jsxDEV(Slider, {\n          value: this.state.filterSalary,\n          onChange: this.handleSlider,\n          min: 0,\n          max: this.maxSalary,\n          step: this.maxSalary / 10,\n          getAriaLabel: index => \"Slider\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 172,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n          children: [this.state.filterSalary[0], \"-\", this.state.filterSalary[1]]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 180,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 171,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 150,\n      columnNumber: 7\n    }, this);\n  }\n\n  applyToJob(jobId) {\n    this.setState({\n      openDialog: true\n    });\n    this.applyingToJob = jobId;\n  }\n\n  canApply(job, jobId) {\n    if (job.appliedBy.length === job.maxApp || job.gotBy.length === job.numPos) return /*#__PURE__*/_jsxDEV(Button, {\n      disabled: true,\n      children: \"Full\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 197,\n      columnNumber: 14\n    }, this);else {\n      let returnButton = false;\n      job.appliedBy.forEach(user => {\n        if (user.id === this.state.currUser._id) return returnButton = true;else return returnButton = false;\n      });\n      if (!returnButton) return /*#__PURE__*/_jsxDEV(Button, {\n        id: \"applyButton\",\n        onClick: () => this.applyToJob(jobId),\n        children: \"Apply\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 206,\n        columnNumber: 11\n      }, this);else return /*#__PURE__*/_jsxDEV(Button, {\n        disabled: true,\n        children: \"Applied\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 210,\n        columnNumber: 19\n      }, this);\n    }\n  }\n\n  displayJobs() {\n    this.state.jobs.sort((a, b) => (a[this.state.sortChoice] - b[this.state.sortChoice]) * parseInt(this.state.order));\n    const [minSal, maxSal] = this.state.filterSalary;\n    return this.state.jobs.filter(job => job.title.includes(this.state.search)).filter(job => job.duration < this.state.filterDuration).filter(job => job.salary <= maxSal && job.salary >= minSal).filter(job => this.state.filterType === \"None\" ? true : job.jobType === this.state.filterType).map(job => {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"title: \", job.title, \" RName: \", job.recruiterName, \" salary: \", job.salary, \" \", \"rating: \", job.rating, \" duration: \", job.duration, \" deadline:\", \" \", job.deadlineDate]\n        }, job._id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 233,\n          columnNumber: 13\n        }, this), this.canApply(job, job._id)]\n      }, job._id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 232,\n        columnNumber: 11\n      }, this);\n    });\n  }\n\n  handleChange(event) {\n    if (this._isMounted) this.setState({ ...this.state,\n      [event.target.name]: event.target.value\n    });\n  }\n\n  handleSlider(event, newValue) {\n    if (this._isMounted) this.setState({ ...this.state,\n      filterSalary: newValue\n    });\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        margin: 100\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"View Jobs\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 261,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(TextField, {\n        style: {\n          margin: \"20px\"\n        },\n        name: \"sortChoice\",\n        select: true,\n        label: \"Sort By\",\n        value: this.state.sortChoice,\n        onChange: this.handleChange,\n        children: [/*#__PURE__*/_jsxDEV(MenuItem, {\n          value: \"salary\",\n          children: \"Salary\"\n        }, 'salary', false, {\n          fileName: _jsxFileName,\n          lineNumber: 270,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(MenuItem, {\n          value: \"rating\",\n          children: \"Rating\"\n        }, 'rating', false, {\n          fileName: _jsxFileName,\n          lineNumber: 273,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(MenuItem, {\n          value: \"duration\",\n          children: \"Duration\"\n        }, 'duration', false, {\n          fileName: _jsxFileName,\n          lineNumber: 276,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 262,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(TextField, {\n        name: \"order\",\n        select: true,\n        label: \"Order\",\n        value: this.state.order,\n        onChange: this.handleChange,\n        children: [/*#__PURE__*/_jsxDEV(MenuItem, {\n          value: \"1\",\n          children: \"Ascending\"\n        }, 'ascending', false, {\n          fileName: _jsxFileName,\n          lineNumber: 287,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(MenuItem, {\n          value: \"-1\",\n          children: \"Descending\"\n        }, 'descending', false, {\n          fileName: _jsxFileName,\n          lineNumber: 290,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 280,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(TextField, {\n        style: {\n          margin: \"20px\"\n        },\n        name: \"search\",\n        lable: \"Search Jobs\",\n        value: this.state.search,\n        onChange: this.handleChange,\n        autoComplete: \"off\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 294,\n        columnNumber: 9\n      }, this), this.displayFilters(), this.displayJobs(), /*#__PURE__*/_jsxDEV(Dialog, {\n        open: this.state.openDialog,\n        onClose: this.handleClose,\n        \"aria-labelledby\": \"form-dialog-title\",\n        children: [/*#__PURE__*/_jsxDEV(DialogTitle, {\n          id: \"form-dialog-title\",\n          children: \"Statement of Purpose\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 309,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(DialogContent, {\n          children: /*#__PURE__*/_jsxDEV(TextField, {\n            style: {\n              minWidth: 500\n            },\n            autoFocus: true,\n            rows: 3,\n            rowsMax: 6,\n            required: true,\n            margin: \"dense\",\n            id: \"sop\",\n            label: \"max 250 words\",\n            type: \"text\",\n            inputProps: {\n              maxLength: 250\n            },\n            multiline: true,\n            variant: \"outlined\",\n            fullWidth: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 311,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 310,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(DialogActions, {\n          children: [/*#__PURE__*/_jsxDEV(Button, {\n            onClick: () => this.handleClose(),\n            color: \"primary\",\n            children: \"Cancel\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 328,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            onClick: () => this.sendApplication(),\n            color: \"primary\",\n            children: \"Add\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 331,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 327,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 304,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 260,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nexport default ViewJobs;","map":{"version":3,"sources":["/home/aman/Assignments/DASS/Job Portal/2019101097/frontend/src/components/ViewJobs/ViewJobs.js"],"names":["React","axios","TextField","MenuItem","Slider","Button","Dialog","DialogTitle","DialogContent","DialogActions","ViewJobs","Component","constructor","props","maxSalary","applyingToJob","_isMounted","state","currUser","jobs","sortChoice","order","search","filterType","filterSalary","filterDuration","openDialog","handleChange","bind","handleSlider","handleClose","applyToJob","sendApplication","setState","jobSOP","document","getElementById","value","jobId","userId","_id","applytoJob","defaults","withCredentials","post","then","response","data","alert","console","log","componentDidMount","get","obj","Object","entries","length","history","push","catch","err","i","Math","max","salary","componentWillUnmount","valuetext","displayFilters","durationFilters","jobTypeFilters","typeFilters","margin","width","index","canApply","job","appliedBy","maxApp","gotBy","numPos","returnButton","forEach","user","id","displayJobs","sort","a","b","parseInt","minSal","maxSal","filter","title","includes","duration","jobType","map","recruiterName","rating","deadlineDate","event","target","name","newValue","render","minWidth","maxLength"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,SACEC,SADF,EAEEC,QAFF,EAGEC,MAHF,EAIEC,MAJF,EAKEC,MALF,EAMEC,WANF,EAOEC,aAPF,EAQEC,aARF,QASO,mBATP,C,CAWA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,MAAMC,QAAN,SAAuBV,KAAK,CAACW,SAA7B,CAAuC;AACrCC,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACjB,UAAMA,KAAN;AACA,SAAKC,SAAL,GAAiB,CAAjB;AACA,SAAKC,aAAL,GAAqB,EAArB;AACA,SAAKC,UAAL,GAAkB,KAAlB;AACA,SAAKC,KAAL,GAAa;AACXC,MAAAA,QAAQ,EAAE,EADC;AAEXC,MAAAA,IAAI,EAAE,EAFK;AAGXC,MAAAA,UAAU,EAAE,QAHD;AAIXC,MAAAA,KAAK,EAAE,CAJI;AAKXC,MAAAA,MAAM,EAAE,EALG;AAMXC,MAAAA,UAAU,EAAE,MAND;AAOXC,MAAAA,YAAY,EAAE,CAAC,CAAD,EAAI,CAAJ,CAPH;AAQXC,MAAAA,cAAc,EAAE,CARL;AASXC,MAAAA,UAAU,EAAE;AATD,KAAb;AAWA,SAAKC,YAAL,GAAoB,KAAKA,YAAL,CAAkBC,IAAlB,CAAuB,IAAvB,CAApB;AACA,SAAKC,YAAL,GAAoB,KAAKA,YAAL,CAAkBD,IAAlB,CAAuB,IAAvB,CAApB;AACA,SAAKE,WAAL,GAAmB,KAAKA,WAAL,CAAiBF,IAAjB,CAAsB,IAAtB,CAAnB;AACA,SAAKG,UAAL,GAAkB,KAAKA,UAAL,CAAgBH,IAAhB,CAAqB,IAArB,CAAlB;AACA,SAAKI,eAAL,GAAuB,KAAKA,eAAL,CAAqBJ,IAArB,CAA0B,IAA1B,CAAvB;AACD;;AAEDE,EAAAA,WAAW,GAAG;AACZ,SAAKG,QAAL,CAAc;AACZP,MAAAA,UAAU,EAAE;AADA,KAAd;AAGD;;AAEDM,EAAAA,eAAe,GAAG;AAChB,UAAME,MAAM,GAAGC,QAAQ,CAACC,cAAT,CAAwB,KAAxB,EAA+BC,KAA9C;AACA,UAAMC,KAAK,GAAG,KAAKvB,aAAnB;AACA,UAAMwB,MAAM,GAAG,KAAKtB,KAAL,CAAWC,QAAX,CAAoBsB,GAAnC;AACA,QAAIC,UAAU,GAAG;AACfH,MAAAA,KADe;AAEfC,MAAAA,MAFe;AAGfL,MAAAA;AAHe,KAAjB;AAKAjC,IAAAA,KAAK,CAACyC,QAAN,CAAeC,eAAf,GAAiC,IAAjC;AACA1C,IAAAA,KAAK,CACF2C,IADH,CACQ,mCADR,EAC6CH,UAD7C,EAEGI,IAFH,CAESC,QAAD,IAAc;AAClB,UAAIA,QAAQ,CAACC,IAAT,KAAkB,SAAtB,EAAiCC,KAAK,CAAC,SAAD,CAAL,CAAjC,KACKA,KAAK,CAAC,iBAAD,CAAL;AACN,KALH;AAMAC,IAAAA,OAAO,CAACC,GAAR,CAAYT,UAAZ;AACA,QAAI,KAAKzB,UAAT,EAAqB,KAAKc,WAAL;AACtB;;AAEDqB,EAAAA,iBAAiB,GAAG;AAClB,SAAKnC,UAAL,GAAkB,IAAlB;AACAf,IAAAA,KAAK,CAACyC,QAAN,CAAeC,eAAf,GAAiC,IAAjC;AACA1C,IAAAA,KAAK,CACFmD,GADH,CACO,gCADP,EAEGP,IAFH,CAESC,QAAD,IAAc;AAClB,UAAIO,GAAG,GAAGP,QAAQ,CAACC,IAAnB;;AACA,UAAIO,MAAM,CAACC,OAAP,CAAeF,GAAf,EAAoBG,MAApB,KAA+B,CAAnC,EAAsC;AACpCR,QAAAA,KAAK,CAAC,eAAD,CAAL;AACA,aAAKnC,KAAL,CAAW4C,OAAX,CAAmBC,IAAnB,CAAwB,QAAxB;AACD,OAHD,MAGO;AACL,YAAI,KAAK1C,UAAT,EACE,KAAKiB,QAAL,CAAc;AACZf,UAAAA,QAAQ,EAAEmC;AADE,SAAd;AAGH;AACF,KAbH,EAcGM,KAdH,CAcUC,GAAD,IAAS;AACdZ,MAAAA,KAAK,CAAC,eAAD,CAAL;AACA,WAAKnC,KAAL,CAAW4C,OAAX,CAAmBC,IAAnB,CAAwB,QAAxB;AACD,KAjBH;AAkBA,QAAIJ,MAAM,CAACC,OAAP,CAAe,KAAKtC,KAAL,CAAWC,QAA1B,EAAoCsC,MAApC,KAA+C,CAAnD,EACEvD,KAAK,CAACmD,GAAN,CAAU,4BAAV,EAAwCP,IAAxC,CAA8CC,QAAD,IAAc;AACzD,WAAK,IAAIe,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGf,QAAQ,CAACC,IAAT,CAAc5B,IAAd,CAAmBqC,MAAvC,EAA+CK,CAAC,EAAhD,EAAoD;AAClD,aAAK/C,SAAL,GAAiBgD,IAAI,CAACC,GAAL,CACf,KAAKjD,SADU,EAEfgC,QAAQ,CAACC,IAAT,CAAc5B,IAAd,CAAmB0C,CAAnB,EAAsBG,MAFP,CAAjB;AAID;;AACD,UAAI,KAAKhD,UAAT,EACE,KAAKiB,QAAL,CAAc;AACZd,QAAAA,IAAI,EAAE2B,QAAQ,CAACC,IAAT,CAAc5B,IADR;AAEZK,QAAAA,YAAY,EAAE,CAAC,CAAD,EAAI,KAAKV,SAAT;AAFF,OAAd;AAIH,KAZD;AAaH;;AAEDmD,EAAAA,oBAAoB,GAAG;AACrB,SAAKjD,UAAL,GAAkB,KAAlB;AACD;;AAEDkD,EAAAA,SAAS,CAAC7B,KAAD,EAAQ;AACf,WAAQ,GAAEA,KAAM,EAAhB;AACD;;AAED8B,EAAAA,cAAc,GAAG;AACf,QAAIC,eAAe,GAAG,EAAtB;AACA,QAAIC,cAAc,GAAG,CAAC,MAAD,EAAS,WAAT,EAAsB,WAAtB,EAAmC,gBAAnC,CAArB;AACA,QAAIC,WAAW,GAAG,EAAlB;;AACA,SAAK,IAAIT,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAG,CAApB,EAAuBA,CAAC,EAAxB,EAA4B;AAC1BO,MAAAA,eAAe,CAACV,IAAhB,eACE,QAAC,QAAD;AAAkB,QAAA,KAAK,EAAEG,CAAzB;AAAA,kBACGA;AADH,SAAeA,CAAf;AAAA;AAAA;AAAA;AAAA,cADF;AAKD;;AAED,SAAKA,CAAC,GAAG,CAAT,EAAYA,CAAC,GAAGQ,cAAc,CAACb,MAA/B,EAAuCK,CAAC,EAAxC,EAA4C;AAC1CS,MAAAA,WAAW,CAACZ,IAAZ,eACE,QAAC,QAAD;AAAkB,QAAA,KAAK,EAAEW,cAAc,CAACR,CAAD,CAAvC;AAAA,kBACGQ,cAAc,CAACR,CAAD;AADjB,SAAeA,CAAf;AAAA;AAAA;AAAA;AAAA,cADF;AAKD;;AAED,wBACE;AAAA,8BACE,QAAC,SAAD;AACE,QAAA,KAAK,EAAE;AAAEU,UAAAA,MAAM,EAAE;AAAV,SADT;AAEE,QAAA,IAAI,EAAC,gBAFP;AAGE,QAAA,MAAM,MAHR;AAIE,QAAA,KAAK,EAAC,UAJR;AAKE,QAAA,KAAK,EAAE,KAAKtD,KAAL,CAAWQ,cALpB;AAME,QAAA,QAAQ,EAAE,KAAKE,YANjB;AAAA,kBAQGyC;AARH;AAAA;AAAA;AAAA;AAAA,cADF,eAWE,QAAC,SAAD;AACE,QAAA,KAAK,EAAE;AAAEG,UAAAA,MAAM,EAAE;AAAV,SADT;AAEE,QAAA,IAAI,EAAC,YAFP;AAGE,QAAA,MAAM,MAHR;AAIE,QAAA,KAAK,EAAC,MAJR;AAKE,QAAA,KAAK,EAAE,KAAKtD,KAAL,CAAWM,UALpB;AAME,QAAA,QAAQ,EAAE,KAAKI,YANjB;AAAA,kBAQG2C;AARH;AAAA;AAAA;AAAA;AAAA,cAXF,eAqBE;AAAK,QAAA,KAAK,EAAE;AAAEE,UAAAA,KAAK,EAAE;AAAT,SAAZ;AAAA,gCACE,QAAC,MAAD;AACE,UAAA,KAAK,EAAE,KAAKvD,KAAL,CAAWO,YADpB;AAEE,UAAA,QAAQ,EAAE,KAAKK,YAFjB;AAGE,UAAA,GAAG,EAAE,CAHP;AAIE,UAAA,GAAG,EAAE,KAAKf,SAJZ;AAKE,UAAA,IAAI,EAAE,KAAKA,SAAL,GAAiB,EALzB;AAME,UAAA,YAAY,EAAG2D,KAAD,IAAW;AAN3B;AAAA;AAAA;AAAA;AAAA,gBADF,eASE;AAAA,qBACG,KAAKxD,KAAL,CAAWO,YAAX,CAAwB,CAAxB,CADH,OACgC,KAAKP,KAAL,CAAWO,YAAX,CAAwB,CAAxB,CADhC;AAAA;AAAA;AAAA;AAAA;AAAA,gBATF;AAAA;AAAA;AAAA;AAAA;AAAA,cArBF;AAAA;AAAA;AAAA;AAAA;AAAA,YADF;AAqCD;;AAEDO,EAAAA,UAAU,CAACO,KAAD,EAAQ;AAChB,SAAKL,QAAL,CAAc;AACZP,MAAAA,UAAU,EAAE;AADA,KAAd;AAGA,SAAKX,aAAL,GAAqBuB,KAArB;AACD;;AAEDoC,EAAAA,QAAQ,CAACC,GAAD,EAAMrC,KAAN,EAAa;AACnB,QAAIqC,GAAG,CAACC,SAAJ,CAAcpB,MAAd,KAAyBmB,GAAG,CAACE,MAA7B,IAAuCF,GAAG,CAACG,KAAJ,CAAUtB,MAAV,KAAqBmB,GAAG,CAACI,MAApE,EACE,oBAAO,QAAC,MAAD;AAAQ,MAAA,QAAQ,MAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAAP,CADF,KAEK;AACH,UAAIC,YAAY,GAAG,KAAnB;AACAL,MAAAA,GAAG,CAACC,SAAJ,CAAcK,OAAd,CAAuBC,IAAD,IAAU;AAC9B,YAAIA,IAAI,CAACC,EAAL,KAAY,KAAKlE,KAAL,CAAWC,QAAX,CAAoBsB,GAApC,EAAyC,OAAQwC,YAAY,GAAG,IAAvB,CAAzC,KACK,OAAQA,YAAY,GAAG,KAAvB;AACN,OAHD;AAIA,UAAI,CAACA,YAAL,EACE,oBACE,QAAC,MAAD;AAAQ,QAAA,EAAE,EAAC,aAAX;AAAyB,QAAA,OAAO,EAAE,MAAM,KAAKjD,UAAL,CAAgBO,KAAhB,CAAxC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,CADF,KAMK,oBAAO,QAAC,MAAD;AAAQ,QAAA,QAAQ,MAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAAP;AACN;AACF;;AAED8C,EAAAA,WAAW,GAAG;AACZ,SAAKnE,KAAL,CAAWE,IAAX,CAAgBkE,IAAhB,CACE,CAACC,CAAD,EAAIC,CAAJ,KACE,CAACD,CAAC,CAAC,KAAKrE,KAAL,CAAWG,UAAZ,CAAD,GAA2BmE,CAAC,CAAC,KAAKtE,KAAL,CAAWG,UAAZ,CAA7B,IACAoE,QAAQ,CAAC,KAAKvE,KAAL,CAAWI,KAAZ,CAHZ;AAKA,UAAM,CAACoE,MAAD,EAASC,MAAT,IAAmB,KAAKzE,KAAL,CAAWO,YAApC;AACA,WAAO,KAAKP,KAAL,CAAWE,IAAX,CACJwE,MADI,CACIhB,GAAD,IAASA,GAAG,CAACiB,KAAJ,CAAUC,QAAV,CAAmB,KAAK5E,KAAL,CAAWK,MAA9B,CADZ,EAEJqE,MAFI,CAEIhB,GAAD,IAASA,GAAG,CAACmB,QAAJ,GAAe,KAAK7E,KAAL,CAAWQ,cAFtC,EAGJkE,MAHI,CAGIhB,GAAD,IAASA,GAAG,CAACX,MAAJ,IAAc0B,MAAd,IAAwBf,GAAG,CAACX,MAAJ,IAAcyB,MAHlD,EAIJE,MAJI,CAIIhB,GAAD,IACN,KAAK1D,KAAL,CAAWM,UAAX,KAA0B,MAA1B,GACI,IADJ,GAEIoD,GAAG,CAACoB,OAAJ,KAAgB,KAAK9E,KAAL,CAAWM,UAP5B,EASJyE,GATI,CASCrB,GAAD,IAAS;AACZ,0BACE;AAAA,gCACE;AAAA,gCACUA,GAAG,CAACiB,KADd,cAC6BjB,GAAG,CAACsB,aADjC,eACyDtB,GAAG,CAACX,MAD7D,EACqE,GADrE,cAEWW,GAAG,CAACuB,MAFf,iBAEkCvB,GAAG,CAACmB,QAFtC,gBAE0D,GAF1D,EAGGnB,GAAG,CAACwB,YAHP;AAAA,WAAQxB,GAAG,CAACnC,GAAZ;AAAA;AAAA;AAAA;AAAA,gBADF,EAMG,KAAKkC,QAAL,CAAcC,GAAd,EAAmBA,GAAG,CAACnC,GAAvB,CANH;AAAA,SAAUmC,GAAG,CAACnC,GAAd;AAAA;AAAA;AAAA;AAAA,cADF;AAUD,KApBI,CAAP;AAqBD;;AACDb,EAAAA,YAAY,CAACyE,KAAD,EAAQ;AAClB,QAAI,KAAKpF,UAAT,EACE,KAAKiB,QAAL,CAAc,EACZ,GAAG,KAAKhB,KADI;AAEZ,OAACmF,KAAK,CAACC,MAAN,CAAaC,IAAd,GAAqBF,KAAK,CAACC,MAAN,CAAahE;AAFtB,KAAd;AAIH;;AACDR,EAAAA,YAAY,CAACuE,KAAD,EAAQG,QAAR,EAAkB;AAC5B,QAAI,KAAKvF,UAAT,EACE,KAAKiB,QAAL,CAAc,EACZ,GAAG,KAAKhB,KADI;AAEZO,MAAAA,YAAY,EAAE+E;AAFF,KAAd;AAIH;;AAEDC,EAAAA,MAAM,GAAG;AACP,wBACE;AAAK,MAAA,KAAK,EAAE;AAAEjC,QAAAA,MAAM,EAAE;AAAV,OAAZ;AAAA,8BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,eAEE,QAAC,SAAD;AACE,QAAA,KAAK,EAAE;AAAEA,UAAAA,MAAM,EAAE;AAAV,SADT;AAEE,QAAA,IAAI,EAAC,YAFP;AAGE,QAAA,MAAM,MAHR;AAIE,QAAA,KAAK,EAAC,SAJR;AAKE,QAAA,KAAK,EAAE,KAAKtD,KAAL,CAAWG,UALpB;AAME,QAAA,QAAQ,EAAE,KAAKO,YANjB;AAAA,gCAQE,QAAC,QAAD;AAAuB,UAAA,KAAK,EAAC,QAA7B;AAAA;AAAA,WAAc,QAAd;AAAA;AAAA;AAAA;AAAA,gBARF,eAWE,QAAC,QAAD;AAAuB,UAAA,KAAK,EAAC,QAA7B;AAAA;AAAA,WAAc,QAAd;AAAA;AAAA;AAAA;AAAA,gBAXF,eAcE,QAAC,QAAD;AAAyB,UAAA,KAAK,EAAC,UAA/B;AAAA;AAAA,WAAc,UAAd;AAAA;AAAA;AAAA;AAAA,gBAdF;AAAA;AAAA;AAAA;AAAA;AAAA,cAFF,eAoBE,QAAC,SAAD;AACE,QAAA,IAAI,EAAC,OADP;AAEE,QAAA,MAAM,MAFR;AAGE,QAAA,KAAK,EAAC,OAHR;AAIE,QAAA,KAAK,EAAE,KAAKV,KAAL,CAAWI,KAJpB;AAKE,QAAA,QAAQ,EAAE,KAAKM,YALjB;AAAA,gCAOE,QAAC,QAAD;AAA0B,UAAA,KAAK,EAAC,GAAhC;AAAA;AAAA,WAAc,WAAd;AAAA;AAAA;AAAA;AAAA,gBAPF,eAUE,QAAC,QAAD;AAA2B,UAAA,KAAK,EAAC,IAAjC;AAAA;AAAA,WAAc,YAAd;AAAA;AAAA;AAAA;AAAA,gBAVF;AAAA;AAAA;AAAA;AAAA;AAAA,cApBF,eAkCE,QAAC,SAAD;AACE,QAAA,KAAK,EAAE;AAAE4C,UAAAA,MAAM,EAAE;AAAV,SADT;AAEE,QAAA,IAAI,EAAC,QAFP;AAGE,QAAA,KAAK,EAAC,aAHR;AAIE,QAAA,KAAK,EAAE,KAAKtD,KAAL,CAAWK,MAJpB;AAKE,QAAA,QAAQ,EAAE,KAAKK,YALjB;AAME,QAAA,YAAY,EAAC;AANf;AAAA;AAAA;AAAA;AAAA,cAlCF,EA0CG,KAAKwC,cAAL,EA1CH,EA2CG,KAAKiB,WAAL,EA3CH,eA4CE,QAAC,MAAD;AACE,QAAA,IAAI,EAAE,KAAKnE,KAAL,CAAWS,UADnB;AAEE,QAAA,OAAO,EAAE,KAAKI,WAFhB;AAGE,2BAAgB,mBAHlB;AAAA,gCAKE,QAAC,WAAD;AAAa,UAAA,EAAE,EAAC,mBAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBALF,eAME,QAAC,aAAD;AAAA,iCACE,QAAC,SAAD;AACE,YAAA,KAAK,EAAE;AAAE2E,cAAAA,QAAQ,EAAE;AAAZ,aADT;AAEE,YAAA,SAAS,MAFX;AAGE,YAAA,IAAI,EAAE,CAHR;AAIE,YAAA,OAAO,EAAE,CAJX;AAKE,YAAA,QAAQ,MALV;AAME,YAAA,MAAM,EAAC,OANT;AAOE,YAAA,EAAE,EAAC,KAPL;AAQE,YAAA,KAAK,EAAC,eARR;AASE,YAAA,IAAI,EAAC,MATP;AAUE,YAAA,UAAU,EAAE;AAAEC,cAAAA,SAAS,EAAE;AAAb,aAVd;AAWE,YAAA,SAAS,MAXX;AAYE,YAAA,OAAO,EAAC,UAZV;AAaE,YAAA,SAAS;AAbX;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,gBANF,eAuBE,QAAC,aAAD;AAAA,kCACE,QAAC,MAAD;AAAQ,YAAA,OAAO,EAAE,MAAM,KAAK5E,WAAL,EAAvB;AAA2C,YAAA,KAAK,EAAC,SAAjD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADF,eAIE,QAAC,MAAD;AAAQ,YAAA,OAAO,EAAE,MAAM,KAAKE,eAAL,EAAvB;AAA+C,YAAA,KAAK,EAAC,SAArD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAJF;AAAA;AAAA;AAAA;AAAA;AAAA,gBAvBF;AAAA;AAAA;AAAA;AAAA;AAAA,cA5CF;AAAA;AAAA;AAAA;AAAA;AAAA,YADF;AA+ED;;AAhToC;;AAmTvC,eAAetB,QAAf","sourcesContent":["import React from \"react\";\nimport axios from \"axios\";\nimport {\n  TextField,\n  MenuItem,\n  Slider,\n  Button,\n  Dialog,\n  DialogTitle,\n  DialogContent,\n  DialogActions,\n} from \"@material-ui/core\";\n\n// const ViewJobs = () => {\n//   let jobs;\n//   axios.get(\"http://localhost:8080/jobs\").then((response) => {\n//     console.log(\"requested\");\n//     // displayJobs(response.data);\n//     jobs = response.data;\n//   });\n\n//   const printJobs = () => {\n//     return <h1>Jobs List</h1>;\n//   };\n\n//   return (\n//     <div>\n//       <h1>View Jobs</h1>\n//       {printJobs()}\n//     </div>\n//   );\n// };\n\nclass ViewJobs extends React.Component {\n  constructor(props) {\n    super(props);\n    this.maxSalary = 0;\n    this.applyingToJob = \"\";\n    this._isMounted = false;\n    this.state = {\n      currUser: {},\n      jobs: [],\n      sortChoice: \"salary\",\n      order: 1,\n      search: \"\",\n      filterType: \"None\",\n      filterSalary: [0, 0],\n      filterDuration: 7,\n      openDialog: false,\n    };\n    this.handleChange = this.handleChange.bind(this);\n    this.handleSlider = this.handleSlider.bind(this);\n    this.handleClose = this.handleClose.bind(this);\n    this.applyToJob = this.applyToJob.bind(this);\n    this.sendApplication = this.sendApplication.bind(this);\n  }\n\n  handleClose() {\n    this.setState({\n      openDialog: false,\n    });\n  }\n\n  sendApplication() {\n    const jobSOP = document.getElementById(\"sop\").value;\n    const jobId = this.applyingToJob;\n    const userId = this.state.currUser._id;\n    let applytoJob = {\n      jobId,\n      userId,\n      jobSOP,\n    };\n    axios.defaults.withCredentials = true;\n    axios\n      .post(\"http:///localhost:8080/applyToJob\", applytoJob)\n      .then((response) => {\n        if (response.data === \"Success\") alert(\"Applied\");\n        else alert(\"Failed to Apply\");\n      });\n    console.log(applytoJob);\n    if (this._isMounted) this.handleClose();\n  }\n\n  componentDidMount() {\n    this._isMounted = true;\n    axios.defaults.withCredentials = true;\n    axios\n      .get(\"http://localhost:8080/currUser\")\n      .then((response) => {\n        let obj = response.data;\n        if (Object.entries(obj).length === 0) {\n          alert(\"Not logged In\");\n          this.props.history.push(\"/login\");\n        } else {\n          if (this._isMounted)\n            this.setState({\n              currUser: obj,\n            });\n        }\n      })\n      .catch((err) => {\n        alert(\"Not logged In\");\n        this.props.history.push(\"/login\");\n      });\n    if (Object.entries(this.state.currUser).length === 0)\n      axios.get(\"http://localhost:8080/jobs\").then((response) => {\n        for (var i = 0; i < response.data.jobs.length; i++) {\n          this.maxSalary = Math.max(\n            this.maxSalary,\n            response.data.jobs[i].salary\n          );\n        }\n        if (this._isMounted)\n          this.setState({\n            jobs: response.data.jobs,\n            filterSalary: [0, this.maxSalary],\n          });\n      });\n  }\n\n  componentWillUnmount() {\n    this._isMounted = false;\n  }\n\n  valuetext(value) {\n    return `${value}`;\n  }\n\n  displayFilters() {\n    let durationFilters = [];\n    let jobTypeFilters = [\"None\", \"Full Time\", \"Part Time\", \"Work from Home\"];\n    let typeFilters = [];\n    for (var i = 1; i < 8; i++) {\n      durationFilters.push(\n        <MenuItem key={i} value={i}>\n          {i}\n        </MenuItem>\n      );\n    }\n\n    for (i = 0; i < jobTypeFilters.length; i++) {\n      typeFilters.push(\n        <MenuItem key={i} value={jobTypeFilters[i]}>\n          {jobTypeFilters[i]}\n        </MenuItem>\n      );\n    }\n\n    return (\n      <div>\n        <TextField\n          style={{ margin: \"20px\" }}\n          name='filterDuration'\n          select\n          label='Duration'\n          value={this.state.filterDuration}\n          onChange={this.handleChange}\n        >\n          {durationFilters}\n        </TextField>\n        <TextField\n          style={{ margin: \"20px\" }}\n          name='filterType'\n          select\n          label='Type'\n          value={this.state.filterType}\n          onChange={this.handleChange}\n        >\n          {typeFilters}\n        </TextField>\n        <div style={{ width: 300 }}>\n          <Slider\n            value={this.state.filterSalary}\n            onChange={this.handleSlider}\n            min={0}\n            max={this.maxSalary}\n            step={this.maxSalary / 10}\n            getAriaLabel={(index) => \"Slider\"}\n          />\n          <h1>\n            {this.state.filterSalary[0]}-{this.state.filterSalary[1]}\n          </h1>\n        </div>\n      </div>\n    );\n  }\n\n  applyToJob(jobId) {\n    this.setState({\n      openDialog: true,\n    });\n    this.applyingToJob = jobId;\n  }\n\n  canApply(job, jobId) {\n    if (job.appliedBy.length === job.maxApp || job.gotBy.length === job.numPos)\n      return <Button disabled>Full</Button>;\n    else {\n      let returnButton = false;\n      job.appliedBy.forEach((user) => {\n        if (user.id === this.state.currUser._id) return (returnButton = true);\n        else return (returnButton = false);\n      });\n      if (!returnButton)\n        return (\n          <Button id='applyButton' onClick={() => this.applyToJob(jobId)}>\n            Apply\n          </Button>\n        );\n      else return <Button disabled>Applied</Button>;\n    }\n  }\n\n  displayJobs() {\n    this.state.jobs.sort(\n      (a, b) =>\n        (a[this.state.sortChoice] - b[this.state.sortChoice]) *\n        parseInt(this.state.order)\n    );\n    const [minSal, maxSal] = this.state.filterSalary;\n    return this.state.jobs\n      .filter((job) => job.title.includes(this.state.search))\n      .filter((job) => job.duration < this.state.filterDuration)\n      .filter((job) => job.salary <= maxSal && job.salary >= minSal)\n      .filter((job) =>\n        this.state.filterType === \"None\"\n          ? true\n          : job.jobType === this.state.filterType\n      )\n      .map((job) => {\n        return (\n          <div key={job._id}>\n            <p key={job._id}>\n              title: {job.title} RName: {job.recruiterName} salary: {job.salary}{\" \"}\n              rating: {job.rating} duration: {job.duration} deadline:{\" \"}\n              {job.deadlineDate}\n            </p>\n            {this.canApply(job, job._id)}\n          </div>\n        );\n      });\n  }\n  handleChange(event) {\n    if (this._isMounted)\n      this.setState({\n        ...this.state,\n        [event.target.name]: event.target.value,\n      });\n  }\n  handleSlider(event, newValue) {\n    if (this._isMounted)\n      this.setState({\n        ...this.state,\n        filterSalary: newValue,\n      });\n  }\n\n  render() {\n    return (\n      <div style={{ margin: 100 }}>\n        <h1>View Jobs</h1>\n        <TextField\n          style={{ margin: \"20px\" }}\n          name='sortChoice'\n          select\n          label='Sort By'\n          value={this.state.sortChoice}\n          onChange={this.handleChange}\n        >\n          <MenuItem key='salary' value='salary'>\n            Salary\n          </MenuItem>\n          <MenuItem key='rating' value='rating'>\n            Rating\n          </MenuItem>\n          <MenuItem key='duration' value='duration'>\n            Duration\n          </MenuItem>\n        </TextField>\n        <TextField\n          name='order'\n          select\n          label='Order'\n          value={this.state.order}\n          onChange={this.handleChange}\n        >\n          <MenuItem key='ascending' value='1'>\n            Ascending\n          </MenuItem>\n          <MenuItem key='descending' value='-1'>\n            Descending\n          </MenuItem>\n        </TextField>\n        <TextField\n          style={{ margin: \"20px\" }}\n          name='search'\n          lable='Search Jobs'\n          value={this.state.search}\n          onChange={this.handleChange}\n          autoComplete='off'\n        ></TextField>\n        {this.displayFilters()}\n        {this.displayJobs()}\n        <Dialog\n          open={this.state.openDialog}\n          onClose={this.handleClose}\n          aria-labelledby='form-dialog-title'\n        >\n          <DialogTitle id='form-dialog-title'>Statement of Purpose</DialogTitle>\n          <DialogContent>\n            <TextField\n              style={{ minWidth: 500 }}\n              autoFocus\n              rows={3}\n              rowsMax={6}\n              required\n              margin='dense'\n              id='sop'\n              label='max 250 words'\n              type='text'\n              inputProps={{ maxLength: 250 }}\n              multiline\n              variant='outlined'\n              fullWidth\n            />\n          </DialogContent>\n          <DialogActions>\n            <Button onClick={() => this.handleClose()} color='primary'>\n              Cancel\n            </Button>\n            <Button onClick={() => this.sendApplication()} color='primary'>\n              Add\n            </Button>\n          </DialogActions>\n        </Dialog>\n      </div>\n    );\n  }\n}\n\nexport default ViewJobs;\n"]},"metadata":{},"sourceType":"module"}