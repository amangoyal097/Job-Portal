{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/home/aman/Assignments/DASS/Job Portal/2019101097/frontend/src/components/ShowInfoR/ShowInfoR.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport { TextField, Button, InputAdornment, IconButton } from \"@material-ui/core\";\nimport EditIcon from \"@material-ui/icons/Edit\";\nimport DoneIcon from \"@material-ui/icons/Done\";\nimport axios from \"axios\";\n\nconst ShowInfoR = props => {\n  _s();\n\n  axios.defaults.withCredentials = true;\n  const [userInfo, setUserInfo] = useState(props.userInfo);\n  const [isEditable, setIsEditable] = useState({\n    name: false,\n    email: false,\n    contactNo: false,\n    bio: false\n  });\n\n  const updateFullInfo = () => {\n    axios.post(\"http://localhost:8080/updateUserInfo\", {\n      userInfo,\n      type: props.userType\n    }).then(response => alert(\"Updated information\")).catch(err => {\n      console.log(err);\n      alert(\"Couldnt update\");\n    });\n  };\n\n  const updateInfo = event => {\n    setUserInfo(prevValues => {\n      return { ...prevValues,\n        [event.target.name]: event.target.value\n      };\n    });\n  };\n\n  const updateIsEditable = field => {\n    setIsEditable(prevValues => {\n      return { ...prevValues,\n        [field]: !prevValues[field]\n      };\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"form\", {\n      autoComplete: \"off\",\n      children: [/*#__PURE__*/_jsxDEV(TextField, {\n        name: \"name\",\n        value: userInfo.name,\n        label: \"Name\",\n        disabled: !isEditable.name,\n        onChange: updateInfo,\n        InputProps: {\n          endAdornment: /*#__PURE__*/_jsxDEV(InputAdornment, {\n            position: \"end\",\n            children: /*#__PURE__*/_jsxDEV(IconButton, {\n              onClick: () => updateIsEditable(\"name\"),\n              children: isEditable.name ? /*#__PURE__*/_jsxDEV(DoneIcon, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 64,\n                columnNumber: 38\n              }, this) : /*#__PURE__*/_jsxDEV(EditIcon, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 64,\n                columnNumber: 53\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 63,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 62,\n            columnNumber: 15\n          }, this)\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(TextField, {\n        name: \"email\",\n        label: \"Email\",\n        value: userInfo.email,\n        onChange: updateInfo\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 9\n      }, this), \" \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(TextField, {\n        name: \"contactNo\",\n        label: \"Contact Number\",\n        value: userInfo.contactNo,\n        onChange: updateInfo\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 9\n      }, this), \" \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Bio\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(TextField, {\n        name: \"bio\",\n        style: {\n          width: 500\n        },\n        autoFocus: true,\n        rows: 3,\n        rowsMax: 6,\n        required: true,\n        margin: \"dense\",\n        id: \"sop\",\n        label: \"max 250 words\",\n        type: \"text\",\n        inputProps: {\n          maxLength: 250\n        },\n        multiline: true,\n        value: userInfo.bio,\n        onChange: updateInfo,\n        variant: \"outlined\",\n        fullWidth: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        color: \"primary\",\n        onClick: updateFullInfo,\n        children: \"Update Information\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 52,\n    columnNumber: 5\n  }, this);\n};\n\n_s(ShowInfoR, \"FGE8EVhxfr4zXlRlFo3vrq6IY48=\");\n\n_c = ShowInfoR;\nexport default ShowInfoR;\n\nvar _c;\n\n$RefreshReg$(_c, \"ShowInfoR\");","map":{"version":3,"sources":["/home/aman/Assignments/DASS/Job Portal/2019101097/frontend/src/components/ShowInfoR/ShowInfoR.js"],"names":["React","useState","TextField","Button","InputAdornment","IconButton","EditIcon","DoneIcon","axios","ShowInfoR","props","defaults","withCredentials","userInfo","setUserInfo","isEditable","setIsEditable","name","email","contactNo","bio","updateFullInfo","post","type","userType","then","response","alert","catch","err","console","log","updateInfo","event","prevValues","target","value","updateIsEditable","field","endAdornment","width","maxLength"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\nimport {\n  TextField,\n  Button,\n  InputAdornment,\n  IconButton,\n} from \"@material-ui/core\";\nimport EditIcon from \"@material-ui/icons/Edit\";\nimport DoneIcon from \"@material-ui/icons/Done\";\nimport axios from \"axios\";\n\nconst ShowInfoR = (props) => {\n  axios.defaults.withCredentials = true;\n  const [userInfo, setUserInfo] = useState(props.userInfo);\n  const [isEditable, setIsEditable] = useState({\n    name: false,\n    email: false,\n    contactNo: false,\n    bio: false,\n  });\n  const updateFullInfo = () => {\n    axios\n      .post(\"http://localhost:8080/updateUserInfo\", {\n        userInfo,\n        type: props.userType,\n      })\n      .then((response) => alert(\"Updated information\"))\n      .catch((err) => {\n        console.log(err);\n        alert(\"Couldnt update\");\n      });\n  };\n  const updateInfo = (event) => {\n    setUserInfo((prevValues) => {\n      return {\n        ...prevValues,\n        [event.target.name]: event.target.value,\n      };\n    });\n  };\n\n  const updateIsEditable = (field) => {\n    setIsEditable((prevValues) => {\n      return {\n        ...prevValues,\n        [field]: !prevValues[field],\n      };\n    });\n  };\n\n  return (\n    <div>\n      <form autoComplete='off'>\n        <TextField\n          name='name'\n          value={userInfo.name}\n          label='Name'\n          disabled={!isEditable.name}\n          onChange={updateInfo}\n          InputProps={{\n            endAdornment: (\n              <InputAdornment position='end'>\n                <IconButton onClick={() => updateIsEditable(\"name\")}>\n                  {isEditable.name ? <DoneIcon /> : <EditIcon />}\n                </IconButton>\n              </InputAdornment>\n            ),\n          }}\n        ></TextField>\n        <br />\n        <TextField\n          name='email'\n          label='Email'\n          value={userInfo.email}\n          onChange={updateInfo}\n        ></TextField>{\" \"}\n        <br />\n        <TextField\n          name='contactNo'\n          label='Contact Number'\n          value={userInfo.contactNo}\n          onChange={updateInfo}\n        ></TextField>{\" \"}\n        <br />\n        <h3>Bio</h3>\n        <TextField\n          name='bio'\n          style={{ width: 500 }}\n          autoFocus\n          rows={3}\n          rowsMax={6}\n          required\n          margin='dense'\n          id='sop'\n          label='max 250 words'\n          type='text'\n          inputProps={{ maxLength: 250 }}\n          multiline\n          value={userInfo.bio}\n          onChange={updateInfo}\n          variant='outlined'\n          fullWidth\n        />\n        <Button color='primary' onClick={updateFullInfo}>\n          Update Information\n        </Button>\n      </form>\n    </div>\n  );\n};\n\nexport default ShowInfoR;\n"]},"metadata":{},"sourceType":"module"}