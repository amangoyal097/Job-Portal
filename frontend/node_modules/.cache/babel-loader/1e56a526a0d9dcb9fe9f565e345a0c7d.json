{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/home/aman/Assignments/DASS/Job Portal/2019101097/frontend/src/components/ViewJobs/ViewJobs.js\";\nimport React from \"react\";\nimport axios from \"axios\";\nimport { TextField, MenuItem, Slider } from \"@material-ui/core\"; // const ViewJobs = () => {\n//   let jobs;\n//   axios.get(\"http://localhost:8080/jobs\").then((response) => {\n//     console.log(\"requested\");\n//     // displayJobs(response.data);\n//     jobs = response.data;\n//   });\n//   const printJobs = () => {\n//     return <h1>Jobs List</h1>;\n//   };\n//   return (\n//     <div>\n//       <h1>View Jobs</h1>\n//       {printJobs()}\n//     </div>\n//   );\n// };\n\nclass ViewJobs extends React.Component {\n  constructor(props) {\n    super(props);\n    this.maxSalary = 0;\n    this.state = {\n      jobs: [],\n      sortChoice: \"salary\",\n      order: 1,\n      search: \"\",\n      filterType: \"None\",\n      filterSalary: [0, 0],\n      filterDuration: 7\n    };\n    this.handleChange = this.handleChange.bind(this);\n  }\n\n  componentDidMount() {\n    axios.get(\"http://localhost:8080/jobs\").then(response => {\n      for (var i = 0; i < response.data.jobs.length; i++) {\n        this.maxSalary = Math.max(this.maxSalary, response.data.jobs[i].salary);\n      }\n\n      this.setState({\n        jobs: response.data.jobs,\n        filterSalary: [0, this.maxSalary]\n      });\n    });\n  }\n\n  displayFilters() {\n    let durationFilters = [];\n    let jobTypeFilters = [\"None\", \"Full Time\", \"Part Time\", \"Work from Home\"];\n    let typeFilters = [];\n\n    for (var i = 1; i < 8; i++) {\n      durationFilters.push( /*#__PURE__*/_jsxDEV(MenuItem, {\n        value: i,\n        children: i\n      }, i, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 9\n      }, this));\n    }\n\n    for (i = 0; i < jobTypeFilters.length; i++) {\n      typeFilters.push( /*#__PURE__*/_jsxDEV(MenuItem, {\n        value: jobTypeFilters[i],\n        children: jobTypeFilters[i]\n      }, i, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 9\n      }, this));\n    }\n\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(TextField, {\n        style: {\n          margin: \"20px\"\n        },\n        name: \"filterDuration\",\n        select: true,\n        label: \"Duration\",\n        value: this.state.filterDuration,\n        onChange: this.handleChange,\n        children: durationFilters\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(TextField, {\n        style: {\n          margin: \"20px\"\n        },\n        name: \"filterType\",\n        select: true,\n        label: \"Job Type\",\n        value: this.state.filterType,\n        onChange: this.handleChange,\n        children: typeFilters\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          width: 300\n        },\n        children: /*#__PURE__*/_jsxDEV(Slider, {\n          name: \"filterSalary\",\n          value: this.state.filterSalary,\n          onChange: this.handleChange,\n          valueLabelDisplay: \"auto\" // getAriaValueText={`${this.state.filterSalary}`}\n\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 96,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 7\n    }, this);\n  }\n\n  displayJobs() {\n    this.state.jobs.sort((a, b) => (a[this.state.sortChoice] - b[this.state.sortChoice]) * parseInt(this.state.order));\n    return this.state.jobs.filter(job => job.title.includes(this.state.search)).filter(job => job.duration < this.state.filterDuration).filter(job => this.state.filterType === \"None\" ? true : job.jobType === this.state.filterType).map(job => {\n      return /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"title: \", job.title, \" salary: \", job.salary, \" rating: \", job.rating, \" \", \"duration: \", job.duration]\n      }, job._id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 124,\n        columnNumber: 11\n      }, this);\n    });\n  }\n\n  handleChange(event) {\n    this.setState({ ...this.state,\n      [event.target.name]: event.target.value\n    });\n  }\n\n  handleSlider(event, newValue) {\n    this.setState({ ...this.state,\n      [filterSalary]: newValue\n    });\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"View Jobs\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 147,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(TextField, {\n        name: \"sortChoice\",\n        select: true,\n        label: \"Sort By\",\n        value: this.state.sortChoice,\n        onChange: this.handleChange,\n        children: [/*#__PURE__*/_jsxDEV(MenuItem, {\n          value: \"salary\",\n          children: \"Salary\"\n        }, 'salary', false, {\n          fileName: _jsxFileName,\n          lineNumber: 155,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(MenuItem, {\n          value: \"rating\",\n          children: \"Rating\"\n        }, 'rating', false, {\n          fileName: _jsxFileName,\n          lineNumber: 158,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(MenuItem, {\n          value: \"duration\",\n          children: \"Duration\"\n        }, 'duration', false, {\n          fileName: _jsxFileName,\n          lineNumber: 161,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 148,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(TextField, {\n        name: \"order\",\n        select: true,\n        label: \"Order\",\n        value: this.state.order,\n        onChange: this.handleChange,\n        children: [/*#__PURE__*/_jsxDEV(MenuItem, {\n          value: \"1\",\n          children: \"Ascending\"\n        }, 'ascending', false, {\n          fileName: _jsxFileName,\n          lineNumber: 172,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(MenuItem, {\n          value: \"-1\",\n          children: \"Descending\"\n        }, 'descending', false, {\n          fileName: _jsxFileName,\n          lineNumber: 175,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 165,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(TextField, {\n        name: \"search\",\n        lable: \"Search Jobs\",\n        value: this.state.search,\n        onChange: this.handleChange,\n        autoComplete: \"off\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 179,\n        columnNumber: 9\n      }, this), this.displayFilters(), this.displayJobs()]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 146,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nexport default ViewJobs;","map":{"version":3,"sources":["/home/aman/Assignments/DASS/Job Portal/2019101097/frontend/src/components/ViewJobs/ViewJobs.js"],"names":["React","axios","TextField","MenuItem","Slider","ViewJobs","Component","constructor","props","maxSalary","state","jobs","sortChoice","order","search","filterType","filterSalary","filterDuration","handleChange","bind","componentDidMount","get","then","response","i","data","length","Math","max","salary","setState","displayFilters","durationFilters","jobTypeFilters","typeFilters","push","margin","width","displayJobs","sort","a","b","parseInt","filter","job","title","includes","duration","jobType","map","rating","_id","event","target","name","value","handleSlider","newValue","render"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport axios from \"axios\";\nimport { TextField, MenuItem, Slider } from \"@material-ui/core\";\n\n// const ViewJobs = () => {\n//   let jobs;\n//   axios.get(\"http://localhost:8080/jobs\").then((response) => {\n//     console.log(\"requested\");\n//     // displayJobs(response.data);\n//     jobs = response.data;\n//   });\n\n//   const printJobs = () => {\n//     return <h1>Jobs List</h1>;\n//   };\n\n//   return (\n//     <div>\n//       <h1>View Jobs</h1>\n//       {printJobs()}\n//     </div>\n//   );\n// };\n\nclass ViewJobs extends React.Component {\n  constructor(props) {\n    super(props);\n    this.maxSalary = 0;\n    this.state = {\n      jobs: [],\n      sortChoice: \"salary\",\n      order: 1,\n      search: \"\",\n      filterType: \"None\",\n      filterSalary: [0, 0],\n      filterDuration: 7,\n    };\n    this.handleChange = this.handleChange.bind(this);\n  }\n\n  componentDidMount() {\n    axios.get(\"http://localhost:8080/jobs\").then((response) => {\n      for (var i = 0; i < response.data.jobs.length; i++) {\n        this.maxSalary = Math.max(this.maxSalary, response.data.jobs[i].salary);\n      }\n      this.setState({\n        jobs: response.data.jobs,\n        filterSalary: [0, this.maxSalary],\n      });\n    });\n  }\n\n  displayFilters() {\n    let durationFilters = [];\n    let jobTypeFilters = [\"None\", \"Full Time\", \"Part Time\", \"Work from Home\"];\n    let typeFilters = [];\n    for (var i = 1; i < 8; i++) {\n      durationFilters.push(\n        <MenuItem key={i} value={i}>\n          {i}\n        </MenuItem>\n      );\n    }\n\n    for (i = 0; i < jobTypeFilters.length; i++) {\n      typeFilters.push(\n        <MenuItem key={i} value={jobTypeFilters[i]}>\n          {jobTypeFilters[i]}\n        </MenuItem>\n      );\n    }\n\n    return (\n      <div>\n        <TextField\n          style={{ margin: \"20px\" }}\n          name='filterDuration'\n          select\n          label='Duration'\n          value={this.state.filterDuration}\n          onChange={this.handleChange}\n        >\n          {durationFilters}\n        </TextField>\n        <TextField\n          style={{ margin: \"20px\" }}\n          name='filterType'\n          select\n          label='Job Type'\n          value={this.state.filterType}\n          onChange={this.handleChange}\n        >\n          {typeFilters}\n        </TextField>\n        <div style={{ width: 300 }}>\n          <Slider\n            name='filterSalary'\n            value={this.state.filterSalary}\n            onChange={this.handleChange}\n            valueLabelDisplay='auto'\n            // getAriaValueText={`${this.state.filterSalary}`}\n          />\n        </div>\n      </div>\n    );\n  }\n\n  displayJobs() {\n    this.state.jobs.sort(\n      (a, b) =>\n        (a[this.state.sortChoice] - b[this.state.sortChoice]) *\n        parseInt(this.state.order)\n    );\n    return this.state.jobs\n      .filter((job) => job.title.includes(this.state.search))\n      .filter((job) => job.duration < this.state.filterDuration)\n      .filter((job) =>\n        this.state.filterType === \"None\"\n          ? true\n          : job.jobType === this.state.filterType\n      )\n      .map((job) => {\n        return (\n          <p key={job._id}>\n            title: {job.title} salary: {job.salary} rating: {job.rating}{\" \"}\n            duration: {job.duration}\n          </p>\n        );\n      });\n  }\n  handleChange(event) {\n    this.setState({\n      ...this.state,\n      [event.target.name]: event.target.value,\n    });\n  }\n  handleSlider(event, newValue) {\n    this.setState({\n      ...this.state,\n      [filterSalary]: newValue,\n    });\n  }\n\n  render() {\n    return (\n      <div>\n        <h1>View Jobs</h1>\n        <TextField\n          name='sortChoice'\n          select\n          label='Sort By'\n          value={this.state.sortChoice}\n          onChange={this.handleChange}\n        >\n          <MenuItem key='salary' value='salary'>\n            Salary\n          </MenuItem>\n          <MenuItem key='rating' value='rating'>\n            Rating\n          </MenuItem>\n          <MenuItem key='duration' value='duration'>\n            Duration\n          </MenuItem>\n        </TextField>\n        <TextField\n          name='order'\n          select\n          label='Order'\n          value={this.state.order}\n          onChange={this.handleChange}\n        >\n          <MenuItem key='ascending' value='1'>\n            Ascending\n          </MenuItem>\n          <MenuItem key='descending' value='-1'>\n            Descending\n          </MenuItem>\n        </TextField>\n        <TextField\n          name='search'\n          lable='Search Jobs'\n          value={this.state.search}\n          onChange={this.handleChange}\n          autoComplete='off'\n        ></TextField>\n        {this.displayFilters()}\n        {this.displayJobs()}\n      </div>\n    );\n  }\n}\n\nexport default ViewJobs;\n"]},"metadata":{},"sourceType":"module"}