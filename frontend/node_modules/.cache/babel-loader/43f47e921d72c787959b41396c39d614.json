{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/home/aman/Assignments/DASS/Job Portal/2019101097/frontend/src/components/ViewJobs/ViewJobs.js\";\nimport React from \"react\";\nimport axios from \"axios\";\nimport { TextField, MenuItem, Slider, Button } from \"@material-ui/core\"; // const ViewJobs = () => {\n//   let jobs;\n//   axios.get(\"http://localhost:8080/jobs\").then((response) => {\n//     console.log(\"requested\");\n//     // displayJobs(response.data);\n//     jobs = response.data;\n//   });\n//   const printJobs = () => {\n//     return <h1>Jobs List</h1>;\n//   };\n//   return (\n//     <div>\n//       <h1>View Jobs</h1>\n//       {printJobs()}\n//     </div>\n//   );\n// };\n\nclass ViewJobs extends React.Component {\n  constructor(props) {\n    super(props);\n    this.maxSalary = 0;\n    this._isMounted = false;\n    this.state = {\n      currUser: {},\n      jobs: [],\n      sortChoice: \"salary\",\n      order: 1,\n      search: \"\",\n      filterType: \"None\",\n      filterSalary: [0, 0],\n      filterDuration: 7\n    };\n    this.handleChange = this.handleChange.bind(this);\n    this.handleSlider = this.handleSlider.bind(this);\n  }\n\n  componentDidMount() {\n    this._isMounted = true;\n    axios.defaults.withCredentials = true;\n    axios.get(\"http://localhost:8080/currUser\").then(response => {\n      let obj = response.data;\n\n      if (Object.entries(obj).length === 0) {\n        alert(\"Not logged In\");\n        this.props.history.push(\"/login\");\n      } else {\n        if (this._isMounted) this.setState({\n          currUser: obj\n        });\n      }\n    }).catch(err => {\n      alert(\"Not logged In\");\n      this.props.history.push(\"/login\");\n    });\n    if (Object.entries(this.state.currUser).length === 0) axios.get(\"http://localhost:8080/jobs\").then(response => {\n      for (var i = 0; i < response.data.jobs.length; i++) {\n        this.maxSalary = Math.max(this.maxSalary, response.data.jobs[i].salary);\n      }\n\n      if (this._isMounted) this.setState({\n        jobs: response.data.jobs,\n        filterSalary: [0, this.maxSalary]\n      });\n    });\n  }\n\n  componentWillUnmount() {\n    this._isMounted = false;\n  }\n\n  valuetext(value) {\n    return `${value}`;\n  }\n\n  displayFilters() {\n    let durationFilters = [];\n    let jobTypeFilters = [\"None\", \"Full Time\", \"Part Time\", \"Work from Home\"];\n    let typeFilters = [];\n\n    for (var i = 1; i < 8; i++) {\n      durationFilters.push( /*#__PURE__*/_jsxDEV(MenuItem, {\n        value: i,\n        children: i\n      }, i, false, {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 9\n      }, this));\n    }\n\n    for (i = 0; i < jobTypeFilters.length; i++) {\n      typeFilters.push( /*#__PURE__*/_jsxDEV(MenuItem, {\n        value: jobTypeFilters[i],\n        children: jobTypeFilters[i]\n      }, i, false, {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 9\n      }, this));\n    }\n\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(TextField, {\n        style: {\n          margin: \"20px\"\n        },\n        name: \"filterDuration\",\n        select: true,\n        label: \"Duration\",\n        value: this.state.filterDuration,\n        onChange: this.handleChange,\n        children: durationFilters\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 111,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(TextField, {\n        style: {\n          margin: \"20px\"\n        },\n        name: \"filterType\",\n        select: true,\n        label: \"Type\",\n        value: this.state.filterType,\n        onChange: this.handleChange,\n        children: typeFilters\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 121,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          width: 300\n        },\n        children: [/*#__PURE__*/_jsxDEV(Slider, {\n          value: this.state.filterSalary,\n          onChange: this.handleSlider,\n          min: 0,\n          max: this.maxSalary,\n          step: this.maxSalary / 10,\n          getAriaLabel: index => \"Slider\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 132,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n          children: [this.state.filterSalary[0], \"-\", this.state.filterSalary[1]]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 140,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 131,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 7\n    }, this);\n  }\n\n  applyToJob(jobId) {\n    console.log(jobId);\n  }\n\n  canApply(job, jobId) {\n    if (job.appliedBy.length === job.maxApp || job.gotBy.length === job.numPos) return /*#__PURE__*/_jsxDEV(Button, {\n      disabled: true,\n      children: \"Full\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 154,\n      columnNumber: 14\n    }, this);else {\n      let returnButton = false;\n      job.appliedBy.forEach(user => {\n        if (user.id === this.state.currUser._id) return returnButton = true;else return returnButton = false;\n      });\n      if (!returnButton) return /*#__PURE__*/_jsxDEV(Button, {\n        onClick: () => this.applyToJob(jobId),\n        children: \"Apply\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 162,\n        columnNumber: 16\n      }, this);else return /*#__PURE__*/_jsxDEV(Button, {\n        disabled: true,\n        children: \"Applied\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 163,\n        columnNumber: 19\n      }, this);\n    }\n  }\n\n  displayJobs() {\n    this.state.jobs.sort((a, b) => (a[this.state.sortChoice] - b[this.state.sortChoice]) * parseInt(this.state.order));\n    const [minSal, maxSal] = this.state.filterSalary;\n    return this.state.jobs.filter(job => job.title.includes(this.state.search)).filter(job => job.duration < this.state.filterDuration).filter(job => job.salary <= maxSal && job.salary >= minSal).filter(job => this.state.filterType === \"None\" ? true : job.jobType === this.state.filterType).map(job => {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"title: \", job.title, \" RName: \", job.recruiterName, \" salary: \", job.salary, \" \", \"rating: \", job.rating, \" duration: \", job.duration, \" deadline:\", \" \", job.deadlineDate]\n        }, job._id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 186,\n          columnNumber: 13\n        }, this), this.canApply(job, job._id)]\n      }, job._id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 185,\n        columnNumber: 11\n      }, this);\n    });\n  }\n\n  handleChange(event) {\n    if (this._isMounted) this.setState({ ...this.state,\n      [event.target.name]: event.target.value\n    });\n  }\n\n  handleSlider(event, newValue) {\n    if (this._isMounted) this.setState({ ...this.state,\n      filterSalary: newValue\n    });\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        margin: 100\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"View Jobs\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 214,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(TextField, {\n        style: {\n          margin: \"20px\"\n        },\n        name: \"sortChoice\",\n        select: true,\n        label: \"Sort By\",\n        value: this.state.sortChoice,\n        onChange: this.handleChange,\n        children: [/*#__PURE__*/_jsxDEV(MenuItem, {\n          value: \"salary\",\n          children: \"Salary\"\n        }, 'salary', false, {\n          fileName: _jsxFileName,\n          lineNumber: 223,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(MenuItem, {\n          value: \"rating\",\n          children: \"Rating\"\n        }, 'rating', false, {\n          fileName: _jsxFileName,\n          lineNumber: 226,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(MenuItem, {\n          value: \"duration\",\n          children: \"Duration\"\n        }, 'duration', false, {\n          fileName: _jsxFileName,\n          lineNumber: 229,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 215,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(TextField, {\n        name: \"order\",\n        select: true,\n        label: \"Order\",\n        value: this.state.order,\n        onChange: this.handleChange,\n        children: [/*#__PURE__*/_jsxDEV(MenuItem, {\n          value: \"1\",\n          children: \"Ascending\"\n        }, 'ascending', false, {\n          fileName: _jsxFileName,\n          lineNumber: 240,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(MenuItem, {\n          value: \"-1\",\n          children: \"Descending\"\n        }, 'descending', false, {\n          fileName: _jsxFileName,\n          lineNumber: 243,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 233,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(TextField, {\n        style: {\n          margin: \"20px\"\n        },\n        name: \"search\",\n        lable: \"Search Jobs\",\n        value: this.state.search,\n        onChange: this.handleChange,\n        autoComplete: \"off\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 247,\n        columnNumber: 9\n      }, this), this.displayFilters(), this.displayJobs()]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 213,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nexport default ViewJobs;\n{\n  /* <Dialog\n        open={eduOpen}\n        onClose={handleEduClose}\n        aria-labelledby='form-dialog-title'\n      >\n        <DialogTitle id='form-dialog-title'>Education Instance</DialogTitle>\n        <DialogContent>\n          <TextField\n            autoFocus\n            required\n            margin='dense'\n            id='instName'\n            label='Institution Name'\n            type='text'\n            fullWidth\n          />\n          <MuiPickersUtilsProvider utils={DateFnsUtils}>\n            <DatePicker\n              views={[\"year\"]}\n              required\n              label='Select Start Year'\n              value={startYear}\n              onChange={setStartYear}\n              style={{ marginTop: \"10px\" }}\n              fullWidth\n              animateYearScrolling\n            />\n            <DatePicker\n              views={[\"year\"]}\n              required\n              label='Select End Year'\n              value={endYear}\n              minDate={startYear}\n              onChange={setEndYear}\n              style={{ marginTop: \"10px\" }}\n              fullWidth\n              animateYearScrolling\n            />\n          </MuiPickersUtilsProvider>\n        </DialogContent>\n        <DialogActions>\n          <Button onClick={handleEduClose} color='primary'>\n            Cancel\n          </Button>\n          <Button onClick={addEducation} color='primary'>\n            Add\n          </Button>\n        </DialogActions>\n      </Dialog> */\n}","map":{"version":3,"sources":["/home/aman/Assignments/DASS/Job Portal/2019101097/frontend/src/components/ViewJobs/ViewJobs.js"],"names":["React","axios","TextField","MenuItem","Slider","Button","ViewJobs","Component","constructor","props","maxSalary","_isMounted","state","currUser","jobs","sortChoice","order","search","filterType","filterSalary","filterDuration","handleChange","bind","handleSlider","componentDidMount","defaults","withCredentials","get","then","response","obj","data","Object","entries","length","alert","history","push","setState","catch","err","i","Math","max","salary","componentWillUnmount","valuetext","value","displayFilters","durationFilters","jobTypeFilters","typeFilters","margin","width","index","applyToJob","jobId","console","log","canApply","job","appliedBy","maxApp","gotBy","numPos","returnButton","forEach","user","id","_id","displayJobs","sort","a","b","parseInt","minSal","maxSal","filter","title","includes","duration","jobType","map","recruiterName","rating","deadlineDate","event","target","name","newValue","render"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport axios from \"axios\";\nimport { TextField, MenuItem, Slider, Button } from \"@material-ui/core\";\n\n// const ViewJobs = () => {\n//   let jobs;\n//   axios.get(\"http://localhost:8080/jobs\").then((response) => {\n//     console.log(\"requested\");\n//     // displayJobs(response.data);\n//     jobs = response.data;\n//   });\n\n//   const printJobs = () => {\n//     return <h1>Jobs List</h1>;\n//   };\n\n//   return (\n//     <div>\n//       <h1>View Jobs</h1>\n//       {printJobs()}\n//     </div>\n//   );\n// };\n\nclass ViewJobs extends React.Component {\n  constructor(props) {\n    super(props);\n    this.maxSalary = 0;\n    this._isMounted = false;\n    this.state = {\n      currUser: {},\n      jobs: [],\n      sortChoice: \"salary\",\n      order: 1,\n      search: \"\",\n      filterType: \"None\",\n      filterSalary: [0, 0],\n      filterDuration: 7,\n    };\n    this.handleChange = this.handleChange.bind(this);\n    this.handleSlider = this.handleSlider.bind(this);\n  }\n\n  componentDidMount() {\n    this._isMounted = true;\n    axios.defaults.withCredentials = true;\n    axios\n      .get(\"http://localhost:8080/currUser\")\n      .then((response) => {\n        let obj = response.data;\n        if (Object.entries(obj).length === 0) {\n          alert(\"Not logged In\");\n          this.props.history.push(\"/login\");\n        } else {\n          if (this._isMounted)\n            this.setState({\n              currUser: obj,\n            });\n        }\n      })\n      .catch((err) => {\n        alert(\"Not logged In\");\n        this.props.history.push(\"/login\");\n      });\n    if (Object.entries(this.state.currUser).length === 0)\n      axios.get(\"http://localhost:8080/jobs\").then((response) => {\n        for (var i = 0; i < response.data.jobs.length; i++) {\n          this.maxSalary = Math.max(\n            this.maxSalary,\n            response.data.jobs[i].salary\n          );\n        }\n        if (this._isMounted)\n          this.setState({\n            jobs: response.data.jobs,\n            filterSalary: [0, this.maxSalary],\n          });\n      });\n  }\n\n  componentWillUnmount() {\n    this._isMounted = false;\n  }\n\n  valuetext(value) {\n    return `${value}`;\n  }\n\n  displayFilters() {\n    let durationFilters = [];\n    let jobTypeFilters = [\"None\", \"Full Time\", \"Part Time\", \"Work from Home\"];\n    let typeFilters = [];\n    for (var i = 1; i < 8; i++) {\n      durationFilters.push(\n        <MenuItem key={i} value={i}>\n          {i}\n        </MenuItem>\n      );\n    }\n\n    for (i = 0; i < jobTypeFilters.length; i++) {\n      typeFilters.push(\n        <MenuItem key={i} value={jobTypeFilters[i]}>\n          {jobTypeFilters[i]}\n        </MenuItem>\n      );\n    }\n\n    return (\n      <div>\n        <TextField\n          style={{ margin: \"20px\" }}\n          name='filterDuration'\n          select\n          label='Duration'\n          value={this.state.filterDuration}\n          onChange={this.handleChange}\n        >\n          {durationFilters}\n        </TextField>\n        <TextField\n          style={{ margin: \"20px\" }}\n          name='filterType'\n          select\n          label='Type'\n          value={this.state.filterType}\n          onChange={this.handleChange}\n        >\n          {typeFilters}\n        </TextField>\n        <div style={{ width: 300 }}>\n          <Slider\n            value={this.state.filterSalary}\n            onChange={this.handleSlider}\n            min={0}\n            max={this.maxSalary}\n            step={this.maxSalary / 10}\n            getAriaLabel={(index) => \"Slider\"}\n          />\n          <h1>\n            {this.state.filterSalary[0]}-{this.state.filterSalary[1]}\n          </h1>\n        </div>\n      </div>\n    );\n  }\n\n  applyToJob(jobId) {\n    console.log(jobId);\n  }\n\n  canApply(job, jobId) {\n    if (job.appliedBy.length === job.maxApp || job.gotBy.length === job.numPos)\n      return <Button disabled>Full</Button>;\n    else {\n      let returnButton = false;\n      job.appliedBy.forEach((user) => {\n        if (user.id === this.state.currUser._id) return (returnButton = true);\n        else return (returnButton = false);\n      });\n      if (!returnButton)\n        return <Button onClick={() => this.applyToJob(jobId)}>Apply</Button>;\n      else return <Button disabled>Applied</Button>;\n    }\n  }\n\n  displayJobs() {\n    this.state.jobs.sort(\n      (a, b) =>\n        (a[this.state.sortChoice] - b[this.state.sortChoice]) *\n        parseInt(this.state.order)\n    );\n    const [minSal, maxSal] = this.state.filterSalary;\n    return this.state.jobs\n      .filter((job) => job.title.includes(this.state.search))\n      .filter((job) => job.duration < this.state.filterDuration)\n      .filter((job) => job.salary <= maxSal && job.salary >= minSal)\n      .filter((job) =>\n        this.state.filterType === \"None\"\n          ? true\n          : job.jobType === this.state.filterType\n      )\n      .map((job) => {\n        return (\n          <div key={job._id}>\n            <p key={job._id}>\n              title: {job.title} RName: {job.recruiterName} salary: {job.salary}{\" \"}\n              rating: {job.rating} duration: {job.duration} deadline:{\" \"}\n              {job.deadlineDate}\n            </p>\n            {this.canApply(job, job._id)}\n          </div>\n        );\n      });\n  }\n  handleChange(event) {\n    if (this._isMounted)\n      this.setState({\n        ...this.state,\n        [event.target.name]: event.target.value,\n      });\n  }\n  handleSlider(event, newValue) {\n    if (this._isMounted)\n      this.setState({\n        ...this.state,\n        filterSalary: newValue,\n      });\n  }\n\n  render() {\n    return (\n      <div style={{ margin: 100 }}>\n        <h1>View Jobs</h1>\n        <TextField\n          style={{ margin: \"20px\" }}\n          name='sortChoice'\n          select\n          label='Sort By'\n          value={this.state.sortChoice}\n          onChange={this.handleChange}\n        >\n          <MenuItem key='salary' value='salary'>\n            Salary\n          </MenuItem>\n          <MenuItem key='rating' value='rating'>\n            Rating\n          </MenuItem>\n          <MenuItem key='duration' value='duration'>\n            Duration\n          </MenuItem>\n        </TextField>\n        <TextField\n          name='order'\n          select\n          label='Order'\n          value={this.state.order}\n          onChange={this.handleChange}\n        >\n          <MenuItem key='ascending' value='1'>\n            Ascending\n          </MenuItem>\n          <MenuItem key='descending' value='-1'>\n            Descending\n          </MenuItem>\n        </TextField>\n        <TextField\n          style={{ margin: \"20px\" }}\n          name='search'\n          lable='Search Jobs'\n          value={this.state.search}\n          onChange={this.handleChange}\n          autoComplete='off'\n        ></TextField>\n        {this.displayFilters()}\n        {this.displayJobs()}\n      </div>\n    );\n  }\n}\n\nexport default ViewJobs;\n{\n  /* <Dialog\n        open={eduOpen}\n        onClose={handleEduClose}\n        aria-labelledby='form-dialog-title'\n      >\n        <DialogTitle id='form-dialog-title'>Education Instance</DialogTitle>\n        <DialogContent>\n          <TextField\n            autoFocus\n            required\n            margin='dense'\n            id='instName'\n            label='Institution Name'\n            type='text'\n            fullWidth\n          />\n          <MuiPickersUtilsProvider utils={DateFnsUtils}>\n            <DatePicker\n              views={[\"year\"]}\n              required\n              label='Select Start Year'\n              value={startYear}\n              onChange={setStartYear}\n              style={{ marginTop: \"10px\" }}\n              fullWidth\n              animateYearScrolling\n            />\n            <DatePicker\n              views={[\"year\"]}\n              required\n              label='Select End Year'\n              value={endYear}\n              minDate={startYear}\n              onChange={setEndYear}\n              style={{ marginTop: \"10px\" }}\n              fullWidth\n              animateYearScrolling\n            />\n          </MuiPickersUtilsProvider>\n        </DialogContent>\n        <DialogActions>\n          <Button onClick={handleEduClose} color='primary'>\n            Cancel\n          </Button>\n          <Button onClick={addEducation} color='primary'>\n            Add\n          </Button>\n        </DialogActions>\n      </Dialog> */\n}\n"]},"metadata":{},"sourceType":"module"}